<h1>week</h1>
<p><a href="https://s40723240.github.io/cd2020/content/week1-week5.html">week1-week5</a></p>
<p><a href="https://s40723240.github.io/cd2020/content/week6-week9.html">week6-week9</a></p>
<p><a href="https://s40723240.github.io/cd2020/content/week10-week14.html">week10-week14</a></p>
<p><a href="https://s40723240.github.io/cd2020/content/week15-week18.html">week15-week18</a></p>
<h2>week1-week5</h2>
<p><strong>week1</strong></p>
<p><strong></strong>建立cd2020個人倉儲和網站</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/gncPlx-y4Tc" width="560"></iframe></p>
<p><strong>week2</strong></p>
<p><strong></strong>任務:將可攜系統python3.7.3更新到3.8.2</p>
<p>下載網站: <a href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a></p>
<p>進入後下載 <span>Download </span><a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2-amd64.exe">Windows x86-64 executable installer</a></p>
<p>選擇customize installation-&gt;將pip取消打勾-&gt;路徑選擇自己要安裝的位置</p>
<p>記得保留舊版以便新版發生錯誤可返回舊版</p>
<p>更改start.bat 將路徑改成自己安裝的位置  ex py373-&gt;py382</p>
<p>好了後儲存並重新啟動</p>
<p>執行<strong><span>python get-pip.py</span></strong></p>
<p>       <strong><span>python -m pip install flask flask-cors markdown lxml bs4 pelican leo</span></strong></p>
<p><span>好了後可測試python wsgi.py 是否能順利開啟</span></p>
<p><strong>week3</strong></p>
<p>翻譯: <a href="https://www.coppeliarobotics.com/helpFiles/index.html">https://www.coppeliarobotics.com/helpFiles/index.html</a></p>
<p>四輪車任務:</p>
<h2>week6-week9</h2>
<h2>week10-week14</h2>
<h2>week15-week18</h2>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>