<h1>week</h1>
<p><a href="https://s40723240.github.io/cd2020/content/week1-week5.html">week1-week5</a></p>
<p><a href="https://s40723240.github.io/cd2020/content/week6-week9.html">week6-week9</a></p>
<p><a href="https://s40723240.github.io/cd2020/content/week10-week14.html">week10-week14</a></p>
<p><a href="https://s40723240.github.io/cd2020/content/week15-week18.html">week15-week18</a></p>
<h2>week1-week5</h2>
<p><span style="color: #ff0000;"><strong>week1</strong></span></p>
<p><strong></strong>建立cd2020個人倉儲和網站(步驟同創建cad2019)</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/gncPlx-y4Tc" width="560"></iframe></p>
<p><span style="color: #ff0000;"><strong>week2</strong></span></p>
<p><strong></strong>任務:將可攜系統python3.7.3更新到3.8.2</p>
<p>下載網站: <a href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a></p>
<p>進入後下載 <span>Download </span><a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2-amd64.exe">Windows x86-64 executable installer</a></p>
<p>選擇customize installation-&gt;將pip取消打勾-&gt;路徑選擇自己要安裝的位置</p>
<p>記得保留舊版以便新版發生錯誤可返回舊版</p>
<p>更改start.bat 將路徑改成自己安裝的位置  ex py373-&gt;py382</p>
<p>好了後儲存並重新啟動</p>
<p>下圖是已更新為python3.8.2</p>
<p><img alt="" height="309" src="/images/cmd_ZwwTHaCTZO.png" width="590"/></p>
<p>執行<strong><span></span></strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">python get-pip.py</pre>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">python -m pip install flask flask-cors markdown lxml bs4 pelican leo</pre>
<p><span>好了後可測試python wsgi.py 是否能順利開啟</span></p>
<p><span><img alt="" height="308" src="/images/cmd_OARUBUwJMn.png" width="589"/></span></p>
<p><span style="color: #ff0000;"><strong>week3</strong></span></p>
<p>任務:從 <a href="https://www.coppeliarobotics.com/helpFiles/index.html">https://www.coppeliarobotics.com/helpFiles/index.html</a> 了解甚麼來實現四輪機器人</p>
<p>翻譯部分放在 <a href="https://github.com/s40723240/cd2020/tree/master/downloads">downloads</a></p>
<h2>week6-week9</h2>
<p><span style="color: #ff0000;"><strong>Keyboard control car</strong></span></p>
<p>參考資料:<a href="https://s40723221.github.io/cd2020/content/Keyboard%20control%20car.html">組長</a></p>
<p>將繪製好的，能直線運行的四輪車導入v-rep</p>
<p><span>轉好後將零件所對應的相對運動位置依照圖示中的方式排序</span></p>
<p>設定馬達將電機開啟<span class="fontstyle0"><span> (</span></span><span class="fontstyle2">add &gt; joint<span> </span></span><span class="fontstyle0">中加入所想要的馬達電機)</span></p>
<p><span><img alt="" height="385" src="/images/vrep_xXTwRZheNE.png" width="807"/></span></p>
<p><span>勾選<span>motor enabled來</span><span>啟動馬達，調整轉動速度和力矩的參數</span></span></p>
<p><span><span>勾選lock motor when target velocity is zero<span><span color="#000000">則可以使馬達速度為零時鎖定住馬達</span></span></span></span></p>
<p><span><img src="https://s40723221.github.io/cd2020/images/tool2.png"/></span></p>
<p><span>動力學屬性設定:物體的碰撞和動態都必須打開，才能使剛剛設定好的馬達對輪胎作動</span></p>
<p><img src="https://s40723221.github.io/cd2020/images/tool3.png"/></p>
<p>將撰寫前後左右及加減速程式碼<span>載入v-rep(add &gt; associated&gt; non threaded)</span></p>
<p><span><img src="https://s40723221.github.io/cd2020/images/tool4.png"/></span></p>
<p>心得:一開始照著v-rep bubble rob的教程來學習這套軟體，鍵盤控制一開始是3D繪圖軟體將零件轉成stl檔案導入v-rep，設定馬達、動力學參數細項等，之後撰寫程式碼來完成鍵盤控制的部分。沒發現摩擦系數相關的設定可能會有打滑現象，可透過設計改良此問題。</p>
<p><span style="color: #ff0000;"><strong>week6 </strong></span></p>
<p>task:</p>
<p><span>1. According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1's  four wheeled robot.</span></p>
<p><span>2. What do you need to know from <a href="https://cyberbotics.com/doc/guide/index">https://cyberbotics.com/doc/guide/index</a><span> </span><span> to implement a four-wheeled robot?</span></span></p>
<p><span><span>1.根據主題0和主題1的材料，您能具體描述機械設計團隊為完成分配1的四輪機器人需要做什麼。</span></span></p>
<p><span><span><span>2.您需要從</span></span><a href="https://cyberbotics.com/doc/guide/index"><span><span>https://cyberbotics.com/doc/guide/index</span></span></a><span> </span><span><span>了解什麼 <span> </span></span></span><span><span><span> 以實現四輪機器人？</span></span></span></span></p>
<p>翻譯部分放在<a href="/downloads/assignment2.pdf">/downloads/assignment2.pdf</a></p>
<p><strong><span style="color: #ff0000;"> week7</span></strong></p>
<p><span style="color: #000000;"></span>直播影片</p>
<p>前面12分鐘由於帶著耳機沒注意到聲音已經失控，所以花了時間尋找問題，應該是沒有調好輸入音源的關係。直播是使用桌電進行，使用obs加上手機的ivcam連到電腦上的ivcam來配合。</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/J_mcq1S-Ycs" width="560"></iframe></p>
<p><span style="color: #ff0000;"><strong>week8</strong></span></p>
<p><span color="#000000" style="color: #000000;">安裝上課老師教的3個模組</span></p>
<p>1.pip install opencv-python</p>
<p>2.pip install imutils</p>
<p>3.pip install numpy</p>
<p><span style="color: #ff0000;"><span style="color: #000000;">抽點影片</span><strong><br/></strong></span></p>
<p><span style="color: #ff0000;"><strong><span style="color: #000000;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/K4oPmlJffQI" width="560"></iframe></span></strong></span></p>
<h2>week10-week14</h2>
<p><span style="color: #ff0000;"><strong>google 用戶登入設定</strong></span></p>
<p>1.建立專案cd2020(名稱無限制</p>
<p>2.git clone <a href="https://github.com/mdecourse/cd2020pj1">https://github.com/mdecourse/cd2020pj1</a>.git</p>
<p>3.啟用API和服務-&gt;google+Domains API-&gt;啟用</p>
<p>4.憑證-&gt;設定同意畫面</p>
<p>5.點內部-&gt;建立</p>
<p>6.名稱cd2020-&gt;儲存</p>
<p>7.建立憑證-&gt;oauth用戶端ID-&gt;網路應用程式-&gt;建立</p>
<p>8.複製ID和密碼並儲存到pj1下 (檔案名稱 oauth_學號.txt</p>
<p>9.網路用戶端1-&gt;<span>已授權的javascript來源</span><span> </span><a href="https://localhost:8443/">https://localhost:8443</a></p>
<p>         已授權的重新導向url <a href="https://localhost:8443/login/google/">https://localhost:8443/login/google/</a>     儲存</p>
<p>10.leo-&gt;cd2020pj1-&gt;@edit config.py 將路徑改成自己的檔案名稱-&gt;儲存後點drawROCtojs</p>
<p>11.Y:\&gt;pip install authomatic</p>
<p>12.cd2020pj1\python wsgi.py       </p>
<p>13.輸入https://localhost:8443測試是否完成</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/iXfxMBBuNLo" width="560"></iframe></p>
<p><strong><span style="color: #ff0000;">以ssh維護倉儲</span></strong></p>
<p>參考資料:老師</p>
<p>1. 下載 Putty 工具組</p>
<p><span>2. 利用 y:\portablegit\bin\sh.exe  </span></p>
<p><span>在sh環境下輸入</span></p>
<div>
<div class="syntaxhighlighter js" id="highlighter_54796">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">ssh-keygen -t rsa -b 4096 -C </code><code class="js string">"40723240"</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>在 /y/home/.ssh 目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key</p>
<p>之後以 SciTE 開啟 id_rsa.pub 後, 將此 public key 的內容, 以新增添加到 Github.com 帳號下 personal settings -&gt; SSH and GPG keys 頁面下.</p>
<p>3. 接下來要利用 puttygen.exe 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式, 並修改隨身系統的啟動批次檔案</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_968601">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">修改啟動的 start.bat 加入下列設定:</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="js plain">set GIT_HOME=%Disk%:\portablegit\bin\</code></div>
<div class="line number4 index3 alt1"><code class="js plain">set GIT_SSH=%Disk%:\putty\plink.exe</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>4. 利用 puttygen.exe 載入第二步驟所建立的 private key, 也就是 id_rsa.</p>
<p>開啟 puttygen 之後, 以右下方的 load 載入 id_rsa, 成功載入後, 利用 save private key 按鈕, 將已經轉為 putty 格式的 .ppk 存檔. 此一 .ppk 檔案必須在設定 putty 中 github.com session 時, 在 Connection-&gt;SSH-&gt;Auth 項目下, 將轉檔後的 .ppk 指向 private key file for authentication 欄位. </p>
<p>並在 Connection-&gt;Proxy 項目下, 指定 Proxy type: HTTP, 並將 IPv6 代理主機設為::69埠號設為 3128.</p>
<p>5. 之後確定 home 下的 .ssh 目錄中的 config 設定檔案為:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_608485">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js preprocessor"># no proxy at home</code></div>
<div class="line number2 index1 alt1"><code class="js preprocessor">#ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.mde.nfu.edu.tw:3128 %h %p</code></div>
<div class="line number3 index2 alt2"><code class="js preprocessor"># set git_ssh=y:/putty/plink.exe with auth under putty github.com session setup</code></div>
<div class="line number4 index3 alt1"><code class="js plain">ProxyCommand y:/putty/plink.exe github.com %h %p</code></div>
<div class="line number5 index4 alt2"><code class="js spaces"> </code> </div>
<div class="line number6 index5 alt1"><code class="js plain">Host github.com</code></div>
<div class="line number7 index6 alt2"><code class="js spaces">    </code><code class="js plain">User git</code></div>
<div class="line number8 index7 alt1"><code class="js spaces">    </code><code class="js plain">Port 22</code></div>
<div class="line number9 index8 alt2"><code class="js spaces">    </code><code class="js plain">Hostname github.com</code></div>
<div class="line number10 index9 alt1"><code class="js spaces">    </code> </div>
<div class="line number11 index10 alt2"><code class="js spaces">    </code><code class="js preprocessor"># for connect.exe need openssh key format</code></div>
<div class="line number12 index11 alt1"><code class="js spaces">    </code><code class="js preprocessor">#IdentityFile "y:\home\.ssh\id_rsa_mdecourse"</code></div>
<div class="line number13 index12 alt2"><code class="js spaces">    </code><code class="js preprocessor"># for plink.exe need rsa key format but set under putty github.com session</code></div>
<div class="line number14 index13 alt1"><code class="js spaces">    </code><code class="js preprocessor"># plink.exe do not need the following setting</code></div>
<div class="line number15 index14 alt2"><code class="js spaces">    </code><code class="js preprocessor">#IdentityFile "y:\home\.ssh\mdecourse_putty_private.ppk"</code></div>
<div class="line number16 index15 alt1"><code class="js spaces"> </code> </div>
<div class="line number17 index16 alt2"><code class="js spaces">    </code><code class="js plain">TCPKeepAlive yes</code></div>
<div class="line number18 index17 alt1"><code class="js spaces">    </code><code class="js plain">IdentitiesOnly yes</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>6. 最後再將cd2020倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線: 範例如下:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_605935">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">[core]</code></div>
<div class="line number2 index1 alt1"><code class="js spaces">    </code><code class="js plain">repositoryformatversion = 0</code></div>
<div class="line number3 index2 alt2"><code class="js spaces">    </code><code class="js plain">filemode = </code><code class="js keyword">false</code></div>
<div class="line number4 index3 alt1"><code class="js spaces">    </code><code class="js plain">bare = </code><code class="js keyword">false</code></div>
<div class="line number5 index4 alt2"><code class="js spaces">    </code><code class="js plain">logallrefupdates = </code><code class="js keyword">true</code></div>
<div class="line number6 index5 alt1"><code class="js spaces">    </code><code class="js plain">symlinks = </code><code class="js keyword">false</code></div>
<div class="line number7 index6 alt2"><code class="js spaces">    </code><code class="js plain">ignorecase = </code><code class="js keyword">true</code></div>
<div class="line number8 index7 alt1"><code class="js plain">[submodule]</code></div>
<div class="line number9 index8 alt2"><code class="js spaces">    </code><code class="js plain">active = .</code></div>
<div class="line number10 index9 alt1"><code class="js plain">[remote </code><code class="js string">"origin"</code><code class="js plain">]</code></div>
<div class="line number11 index10 alt2"><code class="js spaces">    </code><code class="js preprocessor">#url = https://github.com/s40723240/cd2020.git</code></div>
<div class="line number12 index11 alt1"><code class="js spaces">    </code><code class="js plain">url = git@github.com:s40723240/cd2020.git</code></div>
<div class="line number13 index12 alt2"><code class="js spaces">    </code><code class="js plain">fetch = +refs/heads/*:refs/remotes/origin/*</code></div>
<div class="line number14 index13 alt1"><code class="js plain">[branch </code><code class="js string">"master"</code><code class="js plain">]</code></div>
<div class="line number15 index14 alt2"><code class="js spaces">    </code><code class="js plain">remote = origin</code></div>
<div class="line number16 index15 alt1"><code class="js spaces">    </code><code class="js plain">merge = refs/heads/master</code></div>
<div class="line number17 index16 alt2"><code class="js plain">[submodule </code><code class="js string">"cmsimde"</code><code class="js plain">]</code></div>
<div class="line number18 index17 alt1"><code class="js spaces">    </code><code class="js plain">url = https:</code><code class="js comments">//github.com/mdecourse/cmsimde.git</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push.</p>
<p><img alt="" height="480" src="/images/cmd_kM8PjvKMOk.png" width="960"/></p>
<p><span style="color: #ff0000;">ubuntu virtualbox設定</span></p>
<p><span style="color: #000000;">下載</span></p>
<p><span style="color: #000000;">1.<a href="https://drive.google.com/file/d/143jFMheM1xjLxhLkSAouThLzj3WUYX6_/view">ubuntu</a></span></p>
<p>2.<a href="https://drive.google.com/file/d/1KlnsgBFyp6OpCC_BlYH-jKL4uJixpoBl/view">Self-driving car</a></p>
<p>3.<a class="ext-link" href="https://download.virtualbox.org/virtualbox/6.1.8/VirtualBox-6.1.8-137981-Win.exe">virtual box</a></p>
<p>設定網路新增NAT網路</p>
<p>匯入ubuntu</p>
<p><span>設定中的網路中的附加到設定為僅限主機介面卡</span><span>(host-only)</span></p>
<p><span>啟動ubuntu</span></p>
<p>輸入密碼kmol2020</p>
<p><span>點選右上方</span><span>activites-&gt;</span><span>show application</span></p>
<p><span>點選<span>LX terminal</span></span></p>
<p><span><span>輸入<span>xterm&amp;</span></span></span></p>
<p><span><span><span>輸入<span>ls</span><span>顯示資料</span></span></span></span></p>
<p>進入資料夾中輸入<span>cd coppeliasim4_rev4</span></p>
<p>輸入<span>ls</span>查看資料夾中之資料</p>
<p>輸入<span>cd CoppeliaSim_Edu_V4_0_0_ubuntu18_04</span></p>
<p>輸入<span>./coppeliaSim.sh</span></p>
<p><span style="color: #ff0000;">coppeliasim car_model.py 模擬</span></p>
<p><span>設定NAT和網路埠號 22 19999</span></p>
<p><span>開啟coppeliasim匯入sdc.ttt</span></p>
<p><span>將car_model.py拉入編輯器將它啟動</span></p>
<p>將ubuntu中的coppeliasim執行模擬</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/gmfs4A5IkWM" width="560"></iframe></p>
<p><span style="color: #ff0000;">ivp4對外連線</span></p>
<p>密碼:kmol2020</p>
<p>1.喜好設定NatNetwork設定Ipv4，ubuntu設定網路調成Nat網路</p>
<p><img alt="" height="298" src="/images/ipv4.png" width="456"/></p>
<p>2.<span>開啟Lxterminal-&gt;ifconfig-&gt;sudo apt install net-tools</span></p>
<p><span>3.輸入ping 127.0.0.1進行測試</span></p>
<p><span>4.到cd2020pj1進行git pull</span></p>
<p><span>5.輸入sudo vi wsgi.py-&gt; i(編輯內容)-&gt; 對 host近端編輯設置為10.0.2.4</span></p>
<p><span>6.ESC-&gt;:wq儲存</span></p>
<p><span>7.開啟cd2020pj1.leo，在Nav搜尋allowExt(在fileuploadform位置新增ttt檔案)</span></p>
<p><span>8.在tmp輸入sudo vi oauth_scrum.txt (做測試)</span></p>
<p><span>9.返回cd2020pj1輸入python3 wsgi.py</span></p>
<p><span>10.進入https://127.0.0.1:18443/alogin-&gt;輸入admin-&gt;測試是否可以上傳ttt檔案</span></p>
<p><span></span></p>
<p><span> </span></p>
<p> </p><h2>week15-week18</h2>
<h1>Assignment</h1>
<h2>assignment1</h2>
<p><span style="color: #ff0000;">任務</span></p>
<p>1. Describe how to do an efficient random grouping for this course or do the roll calling randomly?</p>
<p>2. Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain<span> </span><a href="https://github.com/mdecourse/cmsimde">CMSiMDE</a><span> </span>website,<span> </span><a href="https://github.com/getpelican/pelican">Pelican blog</a><span> </span>and<span> </span><a href="https://github.com/hakimel/reveal.js/">Reveal.js</a><span> </span>presentation on<span> </span><a href="https://github.com/">Github</a>?</p>
<p>3. What do you need to know from <a href="http://www.coppeliarobotics.com/helpFiles/index.html">http://www.coppeliarobotics.com/helpFiles/index.html</a> to implement a four-wheeled robot?</p>
<p><span style="color: #ff0000;">作業檔案</span></p>
<p><a href="/downloads/Assignmemt1.pdf">Assignmemt1.pdf</a></p>
<h2>assignment2</h2>
<p><span style="color: #ff0000;">任務</span></p>
<p><span>1. According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1's  four wheeled robot.</span></p>
<p><span>2. What do you need to know from <a href="https://cyberbotics.com/doc/guide/index">https://cyberbotics.com/doc/guide/index</a><span> </span><span> to implement a four-wheeled robot?</span></span></p>
<p><span style="color: #ff0000;"><span color="#ff0000" style="color: #ff0000;">作業檔案</span></span></p>
<p><a href="/downloads/assignment2.pdf">assignment2.pdf</a></p>
<h2>assignment3</h2>
<p><span style="color: #ff0000;">任務</span></p>
<p><span style="color: #000000;"><span>According to the reading of Topic 2 and Topic 3, propose a Mechatronic project by using </span><a href="https://www.coppeliarobotics.com/">CoppeliaSim</a><span><span> </span>or<span> </span></span><a href="https://cyberbotics.com/">Webots</a><span><span> </span>and<span> </span></span><a href="https://www.onshape.com/">Onshape</a><span>.</span></span></p>
<p><span color="#000000" style="color: #ff0000;">作業檔案</span></p>
<p><a href="/downloads/MechaEducFutureNeed翻譯.pdf" title="MechaEducFutureNeed翻譯">MechaEducFutureNeed翻譯</a></p>
<p><a href="/downloads/Assignment3.pdf">Assignment3.pdf</a></p>
<h1>Group meeting</h1>
<p><span style="color: #000000;">小組工作分配</span></p>
<p><span style="color: #ff0000;">第一次</span></p>
<p><span><strong><span color="#000000">分工內容:</span></strong></span></p>
<p><span><span color="#000000">40523253:亂數分組程式<br/>40623117:亂數分組程式<br/>40623252:4輪車<br/>40723221 (group leader) :4輪車<br/>40723222:4輪車<br/>40723228:亂數分組程式<br/>40723236:4輪車<br/>40723237:可攜系統<br/>40723240:4輪車<br/>40723243:4輪車<br/>40723244:可攜系統<br/>40723249:可攜系統<br/>40732331:4輪車 </span></span></p>
<p><span><strong><span color="#000000">注意事項:</span></strong></span></p>
<p><span><span color="#000000">1.視課堂進度上傳影片<br/>2.不管會不會做每周都要push<br/>3.可以從gitter上面提問<br/>4.直播大家輪流主持，直播前半部分有教大家如何開直播了<br/>5.git pull request每個人都要會之後要更改東西比較方便<br/>6.不會做的可以去看我的網站我會盡可能提早更新，再不行就到gitter上面提問可以在這邊提問 gitter:https://gitter.im/mdecourse/cd2020<br/>7.2020年3月26日到期assignment 1的pdf繳交請在時間內上傳到自己倉儲的download上<br/>8.pdf上寫上進度，之後打分數依照pdf打分</span></span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HXS95dlMSv8" width="560"></iframe></p>
<p><span style="color: #ff0000;">第二次</span></p>
<p><span><strong><span color="#000000">w6直播進程:</span></strong></span></p>
<p><span><strong><span color="#000000">分工內容:</span></strong></span></p>
<p><span>topic0:</span><br/>40723237<br/>40723221<br/>40723222<br/>40723228<br/>40723243<br/>40723244<br/>40723236<br/>40623117</p>
<p><span>topic1:</span><br/>40723221<br/>40723222<br/>40623252<br/>40523253<br/>40723249<br/>40732331<br/>40723240<br/>40723237</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/B6zwMXl1V3Y" width="560"></iframe></p>
<p><span style="color: #ff0000;">第三次</span></p>
<p>w10開會紀錄:</p>
<p><span>topic2:</span></p>
<p><span>coppeliasim</span>:40723221</p>
<p><span>MSModelingAndTFApproaches.pdf</span>. 207頁:7人<br/>40723249<br/>40623117<br/>40723221<br/>40723228<br/>40723236<br/>40723237<br/>40723243</p>
<p><br/><span>MechatronicDesignCases.pdf</span>. 46頁:2人<br/>40723222<br/>40723244</p>
<p><span>topic3:</span></p>
<p><span>MechaFutureAndChallenges.pdf</span>. 38頁:2人<br/>40623252<br/>40523253</p>
<p><span>MechaEducFutureNeed.pdf</span>. 20頁:1人<br/>40723240</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/jr4IxIwdHLk" width="560"></iframe></p>
<p><span style="color: #ff0000;">第四次</span></p>
<p>ubuntu操作，ssh設定</p>
<p><span style="color: #000000;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/rMHvI863RMo" width="560"></iframe></span></p>
<p><span style="color: #ff0000;">第五次:</span></p>
<p>提醒組員assignment3繳交，ubuntu對外連線影片要看，ssh沒設定的記得設定。</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/FTxEnqCzvxA" width="560"></iframe></p>
<p><span style="color: #000000;"></span><span style="color: #ff0000;">第6次:</span></p>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/TBn09TLJ3HQ" width="560"></iframe><span><strong></strong></span></p>
<p>1.提醒各組員倉儲提交進度要補上</p>
<p>2.filezilla設定教學操作影片在底下</p>
<p></p>